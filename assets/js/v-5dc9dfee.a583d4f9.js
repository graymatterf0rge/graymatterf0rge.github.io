"use strict";(self.webpackChunkafternoon_grocery_store=self.webpackChunkafternoon_grocery_store||[]).push([[5071],{990:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-5dc9dfee",path:"/blogs/frontEnd/2018/020401.html",title:"js变量提升以及var对变量提升的影响",lang:"zh-CN",frontmatter:{title:"js变量提升以及var对变量提升的影响",date:"2018-02-04T00:00:00.000Z",tags:["javascript"],categories:["frontEnd"]},excerpt:"<blockquote>\n<p>JavaScript声明过的变量提升往往会影响到我们对变量的正常获取，所以特写此文，以便以后翻阅。</p>\n</blockquote>\n",headers:[{level:2,title:"什么是变量提升",slug:"什么是变量提升",children:[]},{level:2,title:"变量提升案例",slug:"变量提升案例",children:[{level:3,title:"案例1",slug:"案例1",children:[]},{level:3,title:"案例2",slug:"案例2",children:[]},{level:3,title:"案例3",slug:"案例3",children:[]}]}],git:{createdTime:159076981e4,updatedTime:159076981e4,contributors:[{name:"reco_luan",email:"recoluan@outlook.com",commits:1}]}}},4085:(n,s,a)=>{a.r(s),a.d(s,{default:()=>u});var p=a(6252);const t=(0,p.uE)('<blockquote><p>JavaScript声明过的变量提升往往会影响到我们对变量的正常获取，所以特写此文，以便以后翻阅。</p></blockquote><h2 id="什么是变量提升" tabindex="-1"><a class="header-anchor" href="#什么是变量提升" aria-hidden="true">#</a> 什么是变量提升</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//变量声明提升</span>\n<span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">;</span>\n    <span class="token keyword">var</span> <span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">;</span>\n    <span class="token keyword">var</span> c <span class="token operator">=</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//上述代码等价于</span>\n<span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> a<span class="token punctuation">,</span>f<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>\n    a <span class="token operator">=</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">;</span>\n    <span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    b <span class="token operator">=</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">;</span>\n    c <span class="token operator">=</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><blockquote><p>js中定义变量有两种情况：（注意在方法外不加var是不能定义变量的，出现xx is not defined）</p><ol><li>都加var，在方法内则是局部变量，在方法外则是全局变量。</li><li>在方法内,加var为局部变量，不加var则是全局变量（在执行当前方法之后）</li></ol></blockquote><h2 id="变量提升案例" tabindex="-1"><a class="header-anchor" href="#变量提升案例" aria-hidden="true">#</a> 变量提升案例</h2><h3 id="案例1" tabindex="-1"><a class="header-anchor" href="#案例1" aria-hidden="true">#</a> 案例1</h3><p>由于test1函数里面定义了变量a，由于</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token string">&#39;I\\&#39;m a in all&#39;</span>\n\n<span class="token keyword">function</span> <span class="token function">test1</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>a<span class="token punctuation">)</span>\n\n    <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token string">&#39;I\\&#39;m a in test1&#39;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n    \n<span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>上述代码相当于</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token string">&#39;I\\&#39;m a in all&#39;</span>\n\n<span class="token keyword">function</span> <span class="token function">test1</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> a\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">// undefined</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>a<span class="token punctuation">)</span> <span class="token comment">// I&#39;m a in all（因为window指的是全局环境）</span>\n\n    a <span class="token operator">=</span> <span class="token string">&#39;I\\&#39;m a in test1&#39;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">// I&#39;m a in test1</span>\n<span class="token punctuation">}</span>\n    \n<span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="案例2" tabindex="-1"><a class="header-anchor" href="#案例2" aria-hidden="true">#</a> 案例2</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token string">&#39;I\\&#39;m a in all&#39;</span>\n\n<span class="token keyword">function</span> <span class="token function">test2</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">// I&#39;m a in all</span>\n\n    a <span class="token operator">=</span> <span class="token string">&#39;I\\&#39;m a in test2&#39;</span> <span class="token comment">// 这里本来就是赋值，所以上边的a会输出全局变量</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">// I&#39;m a in test2</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="案例3" tabindex="-1"><a class="header-anchor" href="#案例3" aria-hidden="true">#</a> 案例3</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">test3_1</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">// 报错（Uncaught ReferenceError: a is not defined），阻断以下代码的运行</span>\n\n    a <span class="token operator">=</span> <span class="token string">&#39;I\\&#39;m a in test3&#39;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">// 不输出</span>\n<span class="token punctuation">}</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>\n<span class="token function">test3_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">// 不输出</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">test3_2</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    a <span class="token operator">=</span> <span class="token string">&#39;I\\&#39;m a in test3&#39;</span> <span class="token comment">// 全局变量（但是在方法执行后生效）</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">// I&#39;m a in test3</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// console.log(a) // 如果在方法执行前打印，还是会报错（Uncaught ReferenceError: a is not defined），阻断以下代码的运行</span>\n\n<span class="token function">test3_2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">// I&#39;m a in test3（本来没有全局变量a，当test3运行时，定义了一个全局变量a，所以这里会输出）</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>',15),e=(0,p.Uk)("个人博客："),o={href:"http://recoluan.gitlab.io",target:"_blank",rel:"noopener noreferrer"},c=(0,p._)("strong",null,"午后南杂",-1),l={},u=(0,a(3744).Z)(l,[["render",function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,(0,p._)("p",null,[e,(0,p._)("a",o,[c,(0,p.Wm)(a)])])],64)}]])}}]);