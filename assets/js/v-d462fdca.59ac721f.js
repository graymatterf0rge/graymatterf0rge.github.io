"use strict";(self.webpackChunkafternoon_grocery_store=self.webpackChunkafternoon_grocery_store||[]).push([[8708],{9799:(e,n,s)=>{s.r(n),s.d(n,{data:()=>a});const a={key:"v-d462fdca",path:"/blogs/other/2017/121801.html",title:"github pages/hexo搭建精致博客",lang:"zh-CN",frontmatter:{title:"github pages/hexo搭建精致博客",date:"2017-12-20T00:00:00.000Z",tags:["hexo"],categories:["other"]},excerpt:"<blockquote>\n<p>由于hexo是基于node的框架，所以关于web前端的知识我不会讲太细，如果你是python工程师、ruby工程师，都有其对应的框架，简化搭建博客的难度，不用在hexo上过分用心.\n因为直到现在我才明白，我花费了很多心思搞服务器、弄域名、学后台语言，为的是自己搞一个网站，然而却忽略了最为重要的是<strong>内容</strong>。</p>\n</blockquote>\n",headers:[{level:2,title:"安装node环境",slug:"安装node环境",children:[]},{level:2,title:"安装git",slug:"安装git",children:[]},{level:2,title:"全局安装hexo并初始化一个工程",slug:"全局安装hexo并初始化一个工程",children:[]},{level:2,title:"安装主题",slug:"安装主题",children:[]},{level:2,title:"发布到自己的GitHub pages",slug:"发布到自己的github-pages",children:[]},{level:2,title:"绑定域名",slug:"绑定域名",children:[]},{level:2,title:"使用gitment添加评论功能",slug:"使用gitment添加评论功能",children:[]},{level:2,title:"jsonContent配置",slug:"jsoncontent配置",children:[]},{level:2,title:"设置banner图",slug:"设置banner图",children:[{level:3,title:"持续更新中。。。",slug:"持续更新中。。。",children:[]}]}],git:{createdTime:159076981e4,updatedTime:159076981e4,contributors:[{name:"reco_luan",email:"recoluan@outlook.com",commits:1}]}}},8982:(e,n,s)=>{s.r(n),s.d(n,{default:()=>v});var a=s(6252);const l=(0,a._)("blockquote",null,[(0,a._)("p",null,[(0,a.Uk)("由于hexo是基于node的框架，所以关于web前端的知识我不会讲太细，如果你是python工程师、ruby工程师，都有其对应的框架，简化搭建博客的难度，不用在hexo上过分用心. 因为直到现在我才明白，我花费了很多心思搞服务器、弄域名、学后台语言，为的是自己搞一个网站，然而却忽略了最为重要的是"),(0,a._)("strong",null,"内容"),(0,a.Uk)("。")])],-1),t=(0,a._)("h2",{id:"安装node环境",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#安装node环境","aria-hidden":"true"},"#"),(0,a.Uk)(" 安装node环境")],-1),i=(0,a.Uk)("请移步 "),r={href:"http://nodejs.cn/",target:"_blank",rel:"noopener noreferrer"},o=(0,a.Uk)("nodeJS中文网"),c=(0,a._)("h2",{id:"安装git",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#安装git","aria-hidden":"true"},"#"),(0,a.Uk)(" 安装git")],-1),p=(0,a.Uk)("请移步 "),u={href:"https://git-scm.com/book/zh/v1/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git",target:"_blank",rel:"noopener noreferrer"},b=(0,a.Uk)("起步 - 安装 Git"),d=(0,a.uE)('<h2 id="全局安装hexo并初始化一个工程" tabindex="-1"><a class="header-anchor" href="#全局安装hexo并初始化一个工程" aria-hidden="true">#</a> 全局安装hexo并初始化一个工程</h2><p>过程与安装大部分脚手架工具一样类似，工具可以使用命令行工具或git bash</p><ol><li>全局安装hexo<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ npm install hexo-cli -g\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li>进入一个文件夹（你想把工程放到哪个文件夹就进入哪个文件夹，我的是 <code>D:/files/hexo</code> ），初始化一个工程<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ hexo init yourProjectName\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li>进入你的工程，安装需要的资源<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ cd blog\n$ npm install\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li>启动你的工程，默认监听4000端口，打开 <code>localhost:4000</code> 便可以访问到<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ hexo server\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li>常用的命令就四个 <ul><li>hexo clean 清空缓存</li><li>hexo generate 简写hexo g，生成静态文件</li><li>hexo serve 简写hexo s，启动一个服务，将本地静态文件可视化</li><li>hexo deploy 简写hexo d，发布</li></ul></li></ol><p>这时候一个最原始的hexo博客就搭建好了。</p><h2 id="安装主题" tabindex="-1"><a class="header-anchor" href="#安装主题" aria-hidden="true">#</a> 安装主题</h2><p>可以去官方主题库区找，也可以去百度一下信誉比较好的主题，这个根据自己的喜好选择就行。</p><ol><li>安装。主题一般都是托管在GitHub，可以直接将主题直接clone到你的工程下的themes文件夹下，也可以下载压缩包解压到themes文件夹下。</li><li>配置。打开_config.yml（主题文件夹内还有一个_config.yml，不要弄混）文件进行设置，比如你安装好的主题的文件夹叫themeABC，那就将theme设置为themeABC</li></ol><h2 id="发布到自己的github-pages" tabindex="-1"><a class="header-anchor" href="#发布到自己的github-pages" aria-hidden="true">#</a> 发布到自己的GitHub pages</h2><p>pages分两种，一种是对应自己的GitHub账号，一种对应GitHub上的一个工程，现在我们讲的是对应自己GitHub账号的那种。</p><ol><li>创建。创建一个工程，格式为 <code>nickname.github.io</code> ，我的GitHub昵称叫做recoluan，所以我的pages名字叫做 <code>recoluan.github.io</code></li><li>配置。打开_config.yml，配置自己的工程。<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>deploy:\n  type: git\n  repo: git@github.com:recoluan/recoluan.github.io.git\n  branch: master\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li>在你的本体工程下使用命令行工具发布到 GitHub 工程，并使用 nickname.github.io 访问。<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ hexo g\n$ hexo d\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ol><h2 id="绑定域名" tabindex="-1"><a class="header-anchor" href="#绑定域名" aria-hidden="true">#</a> 绑定域名</h2><ol><li>解析域名。在你的域名服务平台的控制台进行解析，设置两条记录，记录的类型都选择 CNAME，记录值都选择 nickname.github.io ，主机记录一条为空，另一条填写 www。</li><li>设置pages。在github上打开你的工程，点击 Settings ，然后找到 GitHub Pages 下的 Custom domain ，填写你的 www 域名，点击 save 保存，这时域名就可以访问到你的网站了。</li><li>修复本地工程。GitHub工程里会出现一个CNAME文件里面写着你域名，见这个文件放到你的本地工程的所用主题下的source文件夹下，不然下次发布时会清空这个文件。</li></ol><h2 id="使用gitment添加评论功能" tabindex="-1"><a class="header-anchor" href="#使用gitment添加评论功能" aria-hidden="true">#</a> 使用gitment添加评论功能</h2><ol><li>注册 OAuth Apps。代开你的 GitHub 的设置，然后在左边菜单栏最下方找到 Developer settings 选项，点击进去找到 OAuth Apps，添加新的账号，其中“Application name”对应的你的Pages地址，我的是 <code>recoluan.github.io</code> ,“Homepage URL”和“Authorization callback URL”对应的是域名，我的是 <code>http://www.recoluan.com</code> ,这样会生成client_id和client_secret。</li><li>配置_config.yml。<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>gitment:\n  enable: true\n  owner: recoluan\n  repo: recoluan.github.io\n  client_id: your client_id\n  client_secret: your client_secret\n  perPage: 10\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li><li>将前端代码放到文章页或者专门的评论页<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;% if(theme.gitment.enable &amp;&amp; is_post()) { %&gt;\n    &lt;script type=&quot;text/javascript&quot; src=&quot;https://imsun.github.io/gitment/dist/gitment.browser.js&quot;&gt;&lt;/script&gt;\n    &lt;script&gt;\n    var gitment = new Gitment({\n        id: window.location.pathname,\n        owner:&quot;&lt;%= theme.gitment.owner%&gt;&quot;,\n        repo:&quot;&lt;%= theme.gitment.repo%&gt;&quot;,\n        oauth: {\n          client_id:&quot;&lt;%= theme.gitment.client_id%&gt;&quot;,\n          client_secret:&quot;&lt;%= theme.gitment.client_secret%&gt;&quot;\n        },\n        perPage:&quot;&lt;%= theme.gitment.perPage%&gt;&quot;,\n    });\n    gitment.render(&#39;comments&#39;);\n    &lt;/script&gt;\n&lt;% } else { %&gt;\n   &lt;p&gt;评论系统未开启，无法评论！&lt;/p&gt;\n&lt;%}%&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div></li></ol><h2 id="jsoncontent配置" tabindex="-1"><a class="header-anchor" href="#jsoncontent配置" aria-hidden="true">#</a> jsonContent配置</h2><ol><li>首先安装hexo-generator-json-content<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>hexo-generator-json-content \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li>然后在当前主题中的 <code>_config.yml</code> 中配置<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>## 搜索\njsonContent:\n  searchLocal: true\n  searchGoogle: false\n  meta: false\n  pages: false\n  posts:\n    title: true\n    date: true\n    path: true\n    text: true\n    raw: false\n    content: false\n    slug: false\n    updated: false\n    comments: false\n    link: false\n    permalink: false\n    excerpt: false\n    categories: false\n    tags: true\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></li></ol><h2 id="设置banner图" tabindex="-1"><a class="header-anchor" href="#设置banner图" aria-hidden="true">#</a> 设置banner图</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>banner:\n    img: /img/banner.jpg\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>这里注意，<code>/</code>代表的是根目录，项目会去根目录去寻找，否则会自动在当前目录为基础寻找。</p><h3 id="持续更新中。。。" tabindex="-1"><a class="header-anchor" href="#持续更新中。。。" aria-hidden="true">#</a> 持续更新中。。。</h3>',20),m=(0,a.Uk)("个人博客："),g={href:"http://recoluan.gitlab.io",target:"_blank",rel:"noopener noreferrer"},h=(0,a._)("strong",null,"午后南杂",-1),x={},v=(0,s(3744).Z)(x,[["render",function(e,n){const s=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[l,t,(0,a._)("p",null,[i,(0,a._)("a",r,[o,(0,a.Wm)(s)])]),c,(0,a._)("p",null,[p,(0,a._)("a",u,[b,(0,a.Wm)(s)])]),d,(0,a._)("p",null,[m,(0,a._)("a",g,[h,(0,a.Wm)(s)])])],64)}]])}}]);