"use strict";(self.webpackChunkafternoon_grocery_store=self.webpackChunkafternoon_grocery_store||[]).push([[209],{5690:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-74236f0c",path:"/blogs/frontEnd/2018/081101.html",title:"小程序在“页面B”更改title，返回“页面A”仍会显示“页面B”的title",lang:"zh-CN",frontmatter:{title:"小程序在“页面B”更改title，返回“页面A”仍会显示“页面B”的title",date:"2018-08-11T00:00:00.000Z",tags:["小程序"],categories:["frontEnd"]},excerpt:"<blockquote>\n<p>最近在做小程序的时候遇到这么一个有趣的问题，就是从A页面跳转到B页面，如果B页面需要在接口加载之后更改title，\n并且如果接口请求过慢，还灭有请求完毕时就点击返回按钮回到A页面，这时B页面的请求会继续执行，并在执行完毕后修改了A页面的title。</p>\n</blockquote>\n",headers:[{level:2,title:"原因",slug:"原因",children:[]},{level:2,title:"解决",slug:"解决",children:[]},{level:2,title:"代码",slug:"代码",children:[]}],git:{createdTime:159076981e4,updatedTime:159076981e4,contributors:[{name:"reco_luan",email:"recoluan@outlook.com",commits:1}]}}},1051:(n,s,a)=>{a.r(s),a.d(s,{default:()=>u});var t=a(6252);const p=(0,t.uE)('<blockquote><p>最近在做小程序的时候遇到这么一个有趣的问题，就是从A页面跳转到B页面，如果B页面需要在接口加载之后更改title， 并且如果接口请求过慢，还灭有请求完毕时就点击返回按钮回到A页面，这时B页面的请求会继续执行，并在执行完毕后修改了A页面的title。</p></blockquote><h2 id="原因" tabindex="-1"><a class="header-anchor" href="#原因" aria-hidden="true">#</a> 原因</h2><p>个人猜想，小程序本身属于单页面应用，代码的运行权限没有处理好，就像上面这种情况，B页面的代码穿越到了A页面的环境里面，并且执行。</p><h2 id="解决" tabindex="-1"><a class="header-anchor" href="#解决" aria-hidden="true">#</a> 解决</h2><ol><li>既然B页面的请求方法可以在A页面执行，那么在B页面的方法中获取的当前的页面路由时就有可能可以获取到A页面的路由，经过测试果然不出所料。</li><li>所以，可以这样来解决这个问题：在B页面的onLoad中获取当前页面路径，应该是<code>/b</code>，然后在方法中再次获取当前路径，可能是<code>/b</code>，也可能是<code>/a</code>， 若是<code>/a</code>，则是上面提到问题情况，这个时候就不用取改变title了，若是<code>/b</code>，则可以更改。</li></ol><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// utils.js</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getCurrentRouter</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token function">getCurrentPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>\n  <span class="token keyword">return</span> arr<span class="token punctuation">[</span>len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>route<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token punctuation">{</span>getCurrentRouter<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n\n<span class="token comment">// b.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>getCurrentRouter<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> getDataForB <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../../../servies/services.js&#39;</span><span class="token punctuation">;</span>\n\n<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">onLoad</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>currentRouter <span class="token operator">=</span> <span class="token function">getCurrentRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 获取数据</span>\n  <span class="token function">getData</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">getDataForB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 获取数据后判断router是否一致</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentRouter <span class="token operator">==</span> <span class="token function">getCurrentRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        wx<span class="token punctuation">.</span><span class="token function">setNavigationBarTitle</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">&#39;要修改的title&#39;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div>',7),e=(0,t.Uk)("个人博客："),o={href:"http://recoluan.gitlab.io",target:"_blank",rel:"noopener noreferrer"},c=(0,t._)("strong",null,"午后南杂",-1),l={},u=(0,a(3744).Z)(l,[["render",function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,(0,t._)("p",null,[e,(0,t._)("a",o,[c,(0,t.Wm)(a)])])],64)}]])}}]);