"use strict";(self.webpackChunkafternoon_grocery_store=self.webpackChunkafternoon_grocery_store||[]).push([[2700],{8767:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-74ac0acc",path:"/blogs/frontEnd/2017/052401.html",title:"js动态添加dom，如何绑定事件",lang:"zh-CN",frontmatter:{title:"js动态添加dom，如何绑定事件",date:"2017-05-24T00:00:00.000Z",tags:["javascript"],categories:["frontEnd"]},excerpt:'<h2 id="原理" tabindex="-1"><a class="header-anchor" href="#原理" aria-hidden="true">#</a> 原理</h2>\n<p>首先要明白浏览器在加载页面的时候是按顺序来加载的，这样以来就很清楚了，js动态添加dom以后，这些dom并没有绑定事件，这个时候最简单的一个办法就是：将绑定事件的方法封装到一个函数A中，在动态添加完dom以后立即执行一次函数A即可。</p>\n',headers:[{level:2,title:"原理",slug:"原理",children:[]},{level:2,title:"注意",slug:"注意",children:[]},{level:2,title:"代码",slug:"代码",children:[]}],git:{createdTime:159076981e4,updatedTime:159076981e4,contributors:[{name:"reco_luan",email:"recoluan@outlook.com",commits:1}]}}},9761:(n,s,a)=>{a.r(s),a.d(s,{default:()=>b});var e=a(6252);const l=(0,e.uE)('<h2 id="原理" tabindex="-1"><a class="header-anchor" href="#原理" aria-hidden="true">#</a> 原理</h2><p>首先要明白浏览器在加载页面的时候是按顺序来加载的，这样以来就很清楚了，js动态添加dom以后，这些dom并没有绑定事件，这个时候最简单的一个办法就是：将绑定事件的方法封装到一个函数A中，在动态添加完dom以后立即执行一次函数A即可。</p><h2 id="注意" tabindex="-1"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意</h2><p>其次需要注意的是，在你可能同时需要添加许多的dom，不要添加一个就执行一次函数A，这样会增加浏览器的负载，你需要在所有dom添加完以后在执行函数A，例如你用一个for循环遍历dom组合并拼接成一个字符串，然后添加到某个父级dom里面，这个时候你需要在循环外添加一次就可以了。</p><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n    &lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;添加div并绑定点击事件&lt;/title&gt;\n    &lt;style&gt;\n        div.btn{\n            width: 200px;\n            height: 50px;\n            line-height: 50px;\n            text-align: center;\n            border: solid 1px #000;\n            cursor: pointer;\n        }\n        div.innerDiv{\n            width: 50px;\n            height: 50px;\n            background-color: black;\n            margin: 10px;\n            cursor: pointer;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=&quot;aa&quot;&gt;\n        &lt;div class=&quot;btn&quot;&gt;添加div并绑定点击事件&lt;/div&gt;\n        &lt;div class=&quot;outerDiv&quot;&gt;&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;script&gt;\n        function getClass(classname) {\n            return document.getElementsByClassName(classname);\n        }\n        getClass(&#39;btn&#39;)[0].onclick=function () {\n            addDom();\n        }\n        //    将点击事件封装为函数\n        function funA() {\n            for(var i=0;i&lt;getClass(&#39;innerDiv&#39;).length;i++){\n                getClass(&#39;innerDiv&#39;)[i].onclick=function () {\n                    alert(this.innerText);\n                }\n            }\n        }\n        //    将添加dom封装为函数\n        function addDom() {\n            var oldHtml=&#39;&#39;;\n            for(var j=0;j&lt;6;j++){\n                oldHtml+=&#39;&lt;div class=&quot;innerDiv&quot;&gt;&#39;+j+&#39;&lt;/div&gt;&#39;\n            }\n            getClass(&#39;outerDiv&#39;)[0].innerHTML=oldHtml;\n            funA();\n        }\n        //    如果将函数A放在这里就不会起作用的\n        //    funA();\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div>',6),r=(0,e.Uk)("个人博客："),t={href:"http://recoluan.gitlab.io",target:"_blank",rel:"noopener noreferrer"},i=(0,e._)("strong",null,"午后南杂",-1),p={},b=(0,a(3744).Z)(p,[["render",function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[l,(0,e._)("p",null,[r,(0,e._)("a",t,[i,(0,e.Wm)(a)])])],64)}]])}}]);