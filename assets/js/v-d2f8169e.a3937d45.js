"use strict";(self.webpackChunkafternoon_grocery_store=self.webpackChunkafternoon_grocery_store||[]).push([[8866],{3548:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-d2f8169e",path:"/blogs/frontEnd/2018/110301.html",title:"webpack多版本控制方案",lang:"zh-CN",frontmatter:{title:"webpack多版本控制方案",date:"2018-11-03T00:00:00.000Z",tags:["webpack","node"],categories:["frontEnd"]},excerpt:'<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>项目中有这么一个需求，就是按需启动mock功能。考虑到mock只是在特定情况下，所以考虑通过 <code>cross-env</code> 来处理。</p>\n</div>',headers:[{level:2,title:"cross-env修改生产环境变量",slug:"cross-env修改生产环境变量",children:[]}],git:{createdTime:159076981e4,updatedTime:159076981e4,contributors:[{name:"reco_luan",email:"recoluan@outlook.com",commits:1}]}}},2489:(n,s,a)=>{a.r(s),a.d(s,{default:()=>i});var e=a(6252);const t=(0,e._)("div",{class:"custom-container tip"},[(0,e._)("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[(0,e._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,e._)("circle",{cx:"12",cy:"12",r:"9"}),(0,e._)("path",{d:"M12 8h.01"}),(0,e._)("path",{d:"M11 12h1v4h1"})])]),(0,e._)("p",{class:"custom-container-title"},"TIP"),(0,e._)("p",null,[(0,e.Uk)("项目中有这么一个需求，就是按需启动mock功能。考虑到mock只是在特定情况下，所以考虑通过 "),(0,e._)("code",null,"cross-env"),(0,e.Uk)(" 来处理。")])],-1),o=(0,e.uE)('<h2 id="cross-env修改生产环境变量" tabindex="-1"><a class="header-anchor" href="#cross-env修改生产环境变量" aria-hidden="true">#</a> cross-env修改生产环境变量</h2><ol><li>我想要的最终效果是npm run dev:mock 来启动mock，所以先安装 cross-env</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> i --save cross-env\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="2"><li>找到 <code>/config/dev.evn.js</code> ，添加MOCK变量</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token constant">MOCK</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">MOCK</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;false&#39;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="3"><li>在package.json中配置变量</li></ol><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;dev:mock&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cross-env MOCK=true webpack --config build/webpack.config.js&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="4"><li>使用变量</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">MOCK</span> <span class="token operator">===</span> <span class="token string">&#39;true&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  fetchMock<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;https://xxx/user/login&#39;</span><span class="token punctuation">,</span> loginAPI<span class="token punctuation">.</span>login<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="5"><li>启动MOCK</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> run dev:mock\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',11),p=(0,e.Uk)("个人博客："),c={href:"http://recoluan.gitlab.io",target:"_blank",rel:"noopener noreferrer"},l=(0,e._)("strong",null,"午后南杂",-1),r={},i=(0,a(3744).Z)(r,[["render",function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,o,(0,e._)("p",null,[p,(0,e._)("a",c,[l,(0,e.Wm)(a)])])],64)}]])}}]);