"use strict";(self.webpackChunkafternoon_grocery_store=self.webpackChunkafternoon_grocery_store||[]).push([[8836],{5254:(n,a,s)=>{s.r(a),s.d(a,{data:()=>t});const t={key:"v-2ac863b2",path:"/blogs/frontEnd/2018/111301.html",title:"Vue中key值的作用",lang:"zh-CN",frontmatter:{title:"Vue中key值的作用",date:"2018-11-13T00:00:00.000Z",tags:["vue"],categories:["frontEnd"]},excerpt:'<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>出错缘由：<br>\n<code>Vue</code> 会尽可能高效地渲染元素，通常会复用已有元素而不是从头开始渲染。<br>\n这样也不总是符合实际需求，所以 Vue 为你提供了一种方式来表达“这两个元素是完全独立的，不要复用它们”。只需添加一个具有唯一值的 <code>key</code> 属性即可。见<a href="https://cn.vuejs.org/v2/guide/conditional.html#%E7%94%A8-key-%E7%AE%A1%E7%90%86%E5%8F%AF%E5%A4%8D%E7%94%A8%E7%9A%84%E5%85%83%E7%B4%A0" target="_blank" rel="noopener noreferrer">详情<OutboundLink/></a></p>\n</div>',headers:[{level:2,title:"错误代码",slug:"错误代码",children:[]},{level:2,title:"报错分析",slug:"报错分析",children:[]},{level:2,title:"解决方案",slug:"解决方案",children:[]}],git:{createdTime:159076981e4,updatedTime:159076981e4,contributors:[{name:"reco_luan",email:"recoluan@outlook.com",commits:1}]}}},1761:(n,a,s)=>{s.r(a),s.d(a,{default:()=>E});var t=s(6252);const e={class:"custom-container tip"},o=(0,t._)("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[(0,t._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,t._)("circle",{cx:"12",cy:"12",r:"9"}),(0,t._)("path",{d:"M12 8h.01"}),(0,t._)("path",{d:"M11 12h1v4h1"})])],-1),l=(0,t._)("p",{class:"custom-container-title"},"TIP",-1),p=(0,t.Uk)("出错缘由："),c=(0,t._)("br",null,null,-1),u=(0,t._)("code",null,"Vue",-1),r=(0,t.Uk)(" 会尽可能高效地渲染元素，通常会复用已有元素而不是从头开始渲染。"),i=(0,t._)("br",null,null,-1),k=(0,t.Uk)(" 这样也不总是符合实际需求，所以 Vue 为你提供了一种方式来表达“这两个元素是完全独立的，不要复用它们”。只需添加一个具有唯一值的 "),d=(0,t._)("code",null,"key",-1),h=(0,t.Uk)(" 属性即可。见"),g={href:"https://cn.vuejs.org/v2/guide/conditional.html#%E7%94%A8-key-%E7%AE%A1%E7%90%86%E5%8F%AF%E5%A4%8D%E7%94%A8%E7%9A%84%E5%85%83%E7%B4%A0",target:"_blank",rel:"noopener noreferrer"},m=(0,t.Uk)("详情"),b=(0,t.uE)('<h2 id="错误代码" tabindex="-1"><a class="header-anchor" href="#错误代码" aria-hidden="true">#</a> 错误代码</h2><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token comment">&lt;!-- \b代码块1 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>授信申请状态<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>type<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scope<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ scope.row.data2 | format }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!-- \b代码块2 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>data1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>联系人手机<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="报错分析" tabindex="-1"><a class="header-anchor" href="#报错分析" aria-hidden="true">#</a> 报错分析</h2><p>\b如果优先显示代码块1，然后改变type值，显示代码块2，这时Vue为了快速渲染页面，会优先拿代码1的代码渲染到代码块2的位置，但是代码块2并没有定义 <code>slot-scope</code> ，这时就会报标题错误。</p><h2 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案" aria-hidden="true">#</a> 解决方案</h2><ol><li>给使用 <code>v-if</code> 和 <code>v-else</code> 的地方加上 <code>key</code></li><li>将\b\b <code>v-if</code> 和 <code>v-else</code> \b换成 <code>v-show</code></li></ol>',6),v=(0,t.Uk)("个人博客："),w={href:"http://recoluan.gitlab.io",target:"_blank",rel:"noopener noreferrer"},f=(0,t._)("strong",null,"午后南杂",-1),_={},E=(0,s(3744).Z)(_,[["render",function(n,a){const s=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[(0,t._)("div",e,[o,l,(0,t._)("p",null,[p,c,u,r,i,k,d,h,(0,t._)("a",g,[m,(0,t.Wm)(s)])])]),b,(0,t._)("p",null,[v,(0,t._)("a",w,[f,(0,t.Wm)(s)])])],64)}]])}}]);